        push    30      ; [30]
        call    fib     ; [fib]
        native  2       ; []                NATIVE_PRINTI
        push    10      ; [10]              '\n'
        native  1       ; []                NATIVE_PRINTC
        halt            ; []
fib:    base            ; [..., a0, i, b]
        frame   3       ; [a0, i, b]
        copy    0       ; [a0, i, b, a0]
        push    0       ; [a0, i, b, a0, 0]
        eq              ; [a0, i, b, a0==0]
        jpz     if_0    ; [a0, i, b]
        push    0       ; [a0, i, b, 0]
        put     0       ; [0, i, b]
        reset           ; [..., 0, i]
        ret             ; [..., 0]
if_0:   copy    0       ; [a0, i, b, a0]
        push    1       ; [a0, i, b, a0, 1]
        eq              ; [a0, i, b, a0==1]
        jpz     if_1    ; [a0, i, b]
        push    1       ; [a0, i, b, 1]
        put     0       ; [1, i, b]
        reset           ; [..., 1, i]
        ret             ; [..., 1]
if_1:   push    0       ; [a0, i, b, l0]
        push    1       ; [a0, i, b, l0, l1]
        push    1       ; [a0, i, b, l0, l1, l2]
        push    2       ; [a0, i, b, l0, l1, l2, l3]
loop:   copy    6       ; [a0, i, b, l0, l1, l2, l3, l3]
        copy    0       ; [a0, i, b, l0, l1, l2, l3, l3, a0]
        lti             ; [a0, i, b, l0, l1, l2, l3, l3<a0]
        jpz     end     ; [a0, i, b, l0, l1, l2, l3]
        ; l0 = l1
        copy    4       ; [a0, i, b, l0, l1, l2, l3, l1]
        put     3       ; [a0, i, b, l1, l1, l2, l3]
        ; l1 = l2
        copy    5       ; [a0, i, b, l1, l1, l2, l3, l2]
        put     4       ; [a0, i, b, l1, l2, l2, l3]
        ; l2 = l0 + l1
        copy    3       ; [a0, i, b, l1, l2, l2, l3, l1]
        copy    4       ; [a0, i, b, l1, l2, l2, l3, l1, l2]
        addi            ; [a0, i, b, l1, l2, l2, l3, l1+l2]
        put     5       ; [a0, i, b, l1, l2, l1+l2, l3]
        ; ++l3
        push    1       ; [a0, i, b, l1, l2, l1+l2, l3, 1]
        addi            ; [a0, i, b, l1, l2, l1+l2, l3+1]
        jump loop
end:    top     -1      ; [a0, i, b, l0, l1, l2]
        put     0       ; [l2, i, b, l0, l1]
        top     -2      ; [l2, i, b]
        reset           ; [..., l2, i]
        ret             ; [..., l2]
