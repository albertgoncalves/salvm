        push    30      ; [30]
        push    0       ; [30, 0]
        push    1       ; [30, 0, 1]
        call    fib     ; [r0]
        native  1       ; []                NATIVE_PRINTI
        push    10      ; [10]              '\n'
        native  0       ; []                NATIVE_PRINTC
        halt            ; []
fib:    base            ; [..., a0, a1, a2, i, b]
        frame   5       ; [a0, a1, a2, i, b]
tco:    copy    0       ; [a0, a1, a2, i, b, a0]
        push    1       ; [a0, a1, a2, i, b, a0, 1]
        lti             ; [a0, a1, a2, i, b, a0<1]
        jpz     if      ; [a0, a1, a2, i, b]
        copy    1       ; [a0, a1, a2, i, b, a1]
        put     0       ; [a1, a1, a2, i, b]
        put     2       ; [a1, a1, b, i]
        put     1       ; [a1, i, b]
        reset           ; [..., a1, i]
        ret             ; [..., a1]
if:     copy    0       ; [a0, a1, a2, i, b, a0]
        push    1       ; [a0, a1, a2, i, b, a0, 1]
        subi            ; [a0, a1, a2, i, b, a0-1]
        put     0       ; [a0-1, a1, a2, i, b]
        copy    1       ; [a0-1, a1, a2, i, b, a1]
        copy    2       ; [a0-1, a1, a2, i, b, a1, a2]
        addi            ; [a0-1, a1, a2, i, b, a1+a2]
        copy    1       ; [a0-1, a1, a2, i, b, a1+a2, a1]
        put     2       ; [a0-1, a1, a1, i, b, a1+a2]
        put     1       ; [a0-1, a1+a2, a1, i, b]
        jump    tco     ; [a0-1, a1+a2, a1, i, b]
